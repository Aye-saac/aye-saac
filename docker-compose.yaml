version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_ADMIN_PORT}:15672"
    expose:
      - ${RABBITMQ_PORT}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "${RABBITMQ_PORT}"]
      interval: 5s
      timeout: 15s
      retries: 1

  # --------------------------------- Services --------------------------------- #
  automatic_speech_recognition:
    container_name: automatic_speech_recognition
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.automatic_speech_recognition
    volumes:
      - ./ayesaac/services/automatic_speech_recognition:/app/ayesaac/services/automatic_speech_recognition

  camera_manager:
    container_name: camera_manager
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.camera_manager.main
    volumes:
      - ./ayesaac/services/camera_manager:/app/ayesaac/services/camera_manager

  colour_detection:
    container_name: colour_detection
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.colour_detection.main
    volumes:
      - ./ayesaac/services/colour_detection:/app/ayesaac/services/colour_detection

  external_interface:
    container_name: external_interface
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.external_interface
    volumes:
      - ./ayesaac/services/external_interface:/app/ayesaac/services/external_interface
      - output_data:/app/output

  interpreter:
    container_name: interpreter
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.interpreter.main
    volumes:
      - ./ayesaac/services/interpreter:/app/ayesaac/services/interpreter

  manager:
    container_name: manager
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.manager.main
    volumes:
      - ./ayesaac/services/manager:/app/ayesaac/services/manager

  natural_language_generator:
    container_name: natural_language_generator
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.natural_language_generator.main
    volumes:
      - ./ayesaac/services/natural_language_generator:/app/ayesaac/services/natural_language_generator

  natural_language_understanding:
    container_name: natural_language_understanding
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.natural_language_understanding.main
    volumes:
      - ./ayesaac/services/natural_language_understanding:/app/ayesaac/services/natural_language_understanding

  object_detection:
    container_name: object_detection
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.object_detection.main
    volumes:
      - ./ayesaac/services/object_detection:/app/ayesaac/services/object_detection
      - output_data:/app/output

  optical_character_recognition:
    container_name: optical_character_recognition
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.optical_character_recognition.main
    volumes:
      - ./ayesaac/services/optical_character_recognition:/app/ayesaac/services/optical_character_recognition

  position_detection:
    container_name: position_detection
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    command:
      - python
      - -u
      - -m
      - ayesaac.services.position_detection.main
    volumes:
      - ./ayesaac/services/position_detection:/app/ayesaac/services/position_detection

  web:
    container_name: web
    image: ayesaac:latest
    restart: always
    depends_on:
      - rabbitmq
    env_file: .env
    environment:
      FLASK_APP: "./ayesaac/services/web/app.py"
    ports:
      - "${ENDPOINT_PORT}:5000"
    command:
      - flask
      - run
      - "--host=0.0.0.0"
    volumes:
      - ./ayesaac/services/web:/app/ayesaac/services/web
      - output_data:/app/output

volumes:
  output_data:
